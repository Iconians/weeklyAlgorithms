import { describe, expect, it } from "vitest";
import { computeRanks } from "./scrap";

describe("tests from scrapFile", () => {
  it.only("example1, should be [5, 1, 1, 3, 4, 6]", () => {
    expect(
      computeRanks(6, [
        [0, 5, 1, 1],
        [1, 4, 3, 1],
        [2, 3, 2, 2],
        [1, 5, 1, 2],
        [2, 0, 1, 1],
        [3, 4, 3, 2],
        [2, 5, 3, 1],
        [3, 1, 0, 1],
        [4, 0, 2, 1],
        [3, 5, 0, 0],
        [4, 2, 0, 1],
        [0, 1, 1, 2],
        [4, 5, 2, 0],
        [0, 3, 3, 2],
        [1, 2, 0, 0],
      ])
    ).toEqual([5, 1, 1, 3, 4, 6]);
  });

  it("example2, should be [3,2,1,4,5,6]", () => {
    expect(
      computeRanks(6, [
        [0, 5, 1, 2],
        [1, 4, 0, 3],
        [2, 3, 2, 1],
        [1, 5, 1, 0],
        [2, 0, 2, 2],
        [3, 4, 3, 0],
        [2, 5, 3, 0],
        [3, 1, 0, 2],
        [4, 0, 1, 3],
      ])
    ).toEqual([3, 2, 1, 4, 5, 6]);
  });

  it("example3, should be [4,1,2,3]", () => {
    expect(
      computeRanks(4, [
        [0, 3, 2, 1],
        [1, 2, 3, 0],
        [1, 3, 2, 0],
        [2, 0, 2, 0],
        [0, 1, 0, 1],
        [2, 3, 0, 1],
      ])
    ).toEqual([4, 1, 2, 3]);
  });

  it("exampleEmpty, should be [1,1,1,1,1,1,1,1,1,1]", () => {
    expect(computeRanks(10, [])).toEqual([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);
  });

  it("exampleOneGame, should be [1,2,2,2,2,2,2,8]", () => {
    expect(computeRanks(8, [[0, 7, 2, 0]])).toEqual([1, 2, 2, 2, 2, 2, 2, 8]);
  });

  it("exampleCrazy, should be [3,4,8,1,6,2,5,7]", () => {
    expect(
      computeRanks(8, [
        [0, 7, 0, 0],
        [1, 6, 2, 2],
        [2, 5, 0, 0],
        [3, 4, 0, 0],
        [1, 7, 0, 0],
        [2, 0, 0, 0],
        [3, 6, 0, 0],
        [4, 5, 0, 0],
        [2, 7, 2, 2],
        [3, 1, 0, 0],
        [4, 0, 0, 0],
        [5, 6, 0, 0],
        [3, 7, 0, 0],
        [4, 2, 0, 0],
        [5, 1, 1, 1],
        [6, 0, 0, 0],
        [4, 7, 2, 2],
        [5, 3, 1, 3],
        [6, 2, 0, 0],
        [0, 1, 1, 1],
        [5, 7, 0, 0],
        [6, 4, 2, 2],
        [0, 3, 3, 1],
        [1, 2, 0, 0],
        [6, 7, 0, 0],
        [0, 5, 0, 2],
        [1, 4, 0, 0],
        [2, 3, 0, 0],
      ])
    ).toEqual([3, 4, 8, 1, 6, 2, 5, 7]);
  });
});
